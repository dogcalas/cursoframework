<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class HisIocexception extends BaseHisIocexception
{

    public function cantidad($idestructura, $idtipotraza, $ip_host, $rol, $dominio, $estructuracomun, $fecha_desde, $fecha_hasta, $campos)
    {
        $cont = 0;
        $where = 't.idtipotraza = ?';
        $valores[] = $idtipotraza;
        if (isset($campos->idusuario) && $campos->idusuario) {
            $where .= ' AND t.usuario LIKE ?';
            $valores[] = '%' . $campos->idusuario . '%';
        }
        if (isset($campos->descripcion) && $campos->descripcion) {
            $where .= ' AND t.descripcion LIKE ?';
            $valores[] = '%' . $campos->descripcion . '%';
        }
        if (isset($campos->log) && $campos->log) {
            $where .= ' AND t.log LIKE ?';
            $valores[] = '%' . $campos->log . '%';
        }
        if (isset($campos->origen) && $campos->origen) {
            $where .= ' AND t.origen LIKE ?';
            $valores[] = '%' . $campos->origen . '%';
        }
        if (isset($campos->destino) && $campos->destino) {
            $where .= ' AND t.destino LIKE ?';
            $valores[] = '%' . $campos->destino . '%';
        }
        if (isset($campos->accion) && $campos->accion) {
            $where .= ' AND t.accion LIKE ?';
            $valores[] = '%' . $campos->accion . '%';
        }
        if (isset($campos->controlador) && $campos->controlador) {
            $where .= ' AND t.controlador LIKE ?';
            $valores[] = '%' . $campos->controlador . '%';
        }
        if (isset($campos->clase) && $campos->clase) {
            $where .= ' AND t.clase LIKE ?';
            $valores[] = '%' . $campos->clase . '%';
        }
        if (isset($campos->metodo) && $campos->metodo) {
            $where .= ' AND t.metodo LIKE ?';
            $valores[] = '%' . $campos->metodo . '%';
        }
        if (isset($campos->codigo) && $campos->codigo) {
            $where .= ' AND t.codigo LIKE ?';
            $valores[] = '%' . $campos->codigo . '%';
        }
        if ($idestructura != 0) {
            $count++;
            $where .= ' AND t.idestructuracomun = ?';
            $valores[$count] = $idestructura;
        }
        if ($ip_host != 0) {
            $where .= ' AND t.ip_host = ?';
            $valores[] = $ip_host;
        }
        if ($rol != 0) {
            $where .= ' AND t.rol = ?';
            $valores[] = $rol;
        }
        if ($dominio != 0) {
            $where .= ' AND t.dominio = ?';
            $valores[] = $dominio;
        }
        if ($estructuracomun != 0) {
            $where .= ' AND t.estructuracomun = ?';
            $valores[] = $estructuracomun;
        }
        if ($fecha_desde != 0) {
            $where .= ' AND t.fecha >= ?';
            $valores[] = $fecha_desde;
        }
        if ($fecha_hasta != 0) {
            $where .= ' AND t.fecha <= ?';
            $valores[] = $fecha_hasta;
        }
        $query = Doctrine_Query::create();
        $result = $query->select('COUNT(t.idtraza) cantidad')
            ->from('HisIocexception t')
            ->where($where, $valores)
            ->execute()
            ->toArray();
        $query->free();
        return $result;
    }

    public function select($idestructura, $idtipotraza, $ip_host, $rol, $dominio, $estructuracomun, $fecha_desde, $fecha_hasta, $offset, $limit, $campos)
    {
        $where = 't.idtipotraza = ?';
        $valores[] = $idtipotraza;
        if (isset($campos->idusuario) && $campos->idusuario) {
            $where .= ' AND t.usuario LIKE ?';
            $valores[] = '%' . $campos->idusuario . '%';
        }
        if (isset($campos->mensaje) && $campos->mensaje) {
            $where .= ' AND t.mensaje LIKE ?';
            $valores[] = '%' . $campos->mensaje . '%';
        }
        if (isset($campos->descripcion) && $campos->descripcion) {
            $where .= ' AND t.descripcion LIKE ?';
            $valores[] = '%' . $campos->descripcion . '%';
        }
        if (isset($campos->log) && $campos->log) {
            $where .= ' AND t.log LIKE ?';
            $valores[] = '%' . $campos->log . '%';
        }
        if (isset($campos->origen) && $campos->origen) {
            $where .= ' AND t.origen LIKE ?';
            $valores[] = '%' . $campos->origen . '%';
        }
        if (isset($campos->destino) && $campos->destino) {
            $where .= ' AND t.destino LIKE ?';
            $valores[] = '%' . $campos->destino . '%';
        }
        if (isset($campos->accion) && $campos->accion) {
            $where .= ' AND t.accion LIKE ?';
            $valores[] = '%' . $campos->accion . '%';
        }
        if (isset($campos->controlador) && $campos->controlador) {
            $where .= ' AND t.controlador LIKE ?';
            $valores[] = '%' . $campos->controlador . '%';
        }
        if (isset($campos->clase) && $campos->clase) {
            $where .= ' AND t.clase LIKE ?';
            $valores[] = '%' . $campos->clase . '%';
        }
        if (isset($campos->metodo) && $campos->metodo) {
            $where .= ' AND t.metodo LIKE ?';
            $valores[] = '%' . $campos->metodo . '%';
        }
        if (isset($campos->codigo) && $campos->codigo) {
            $where .= ' AND t.codigo LIKE ?';
            $valores[] = '%' . $campos->codigo . '%';
        }
        if ($idestructura != 0) {
            $count++;
            $where .= ' AND t.idestructuracomun = ?';
            $valores[$count] = $idestructura;
        }
        if ($ip_host != 0) {
            $where .= ' AND t.ip_host = ?';
            $valores[] = $ip_host;
        }
        if ($rol != 0) {
            $where .= ' AND t.rol = ?';
            $valores[] = $rol;
        }
        if ($dominio != 0) {
            $where .= ' AND t.dominio = ?';
            $valores[] = $dominio;
        }
        if ($estructuracomun != 0) {
            $where .= ' AND t.estructuracomun = ?';
            $valores[] = $estructuracomun;
        }
        if ($fecha_desde != 0) {
            $where .= ' AND t.fecha >= ?';
            $valores[] = $fecha_desde;
        }
        if ($fecha_hasta != 0) {
            $where .= ' AND t.fecha <= ?';
            $valores[] = $fecha_hasta;
        }
        $query = Doctrine_Query::create();
        $result = $query->select('t.*')
            ->from('HisIocexception t')
            ->where($where, $valores)
            ->offset($offset)
            ->limit($limit)
            ->orderBy('t.fecha DESC')
            ->execute()
            ->toArray();
        $query->free();
        return $result;
    }

}
