<?php

/**
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class HisExcepcion extends BaseHisExcepcion
{

    public function setUp()
    {
//		$this ->hasOne('HisTraza', array ('local' => 'idtraza', 'foreign' => 'idtraza'));
//		$this ->hasOne('HisRendimiento', array ('local' => 'idtraza', 'foreign' => 'idtraza'));
    }

    public function cantidad($idestructura, $idtipotraza, $ip_host, $rol, $dominio, $estructuracomun, $fecha_desde, $fecha_hasta, $campos)
    {
        $where = 't.idtipotraza = ?';
        $valores[] = $idtipotraza;
        if (isset($campos->idusuario) && $campos->idusuario) {
            $where .= ' AND t.usuario LIKE ?';
            $valores[] = '%' . $campos->idusuario . '%';
        }
        if (isset($campos->codigo) && $campos->codigo) {
            $where .= ' AND t.codigo LIKE ?';
            $valores[] = '%' . $campos->codigo . '%';
        }
        if (isset($campos->tipo) && $campos->tipo) {
            $where .= ' AND t.tipo LIKE ?';
            $valores[] = '%' . $campos->tipo . '%';
        }
        if (isset($campos->idioma) && $campos->idioma) {
            $where .= ' AND t.idioma LIKE ?';
            $valores[] = '%' . $campos->idioma . '%';
        }
        if (isset($campos->mensaje) && $campos->mensaje) {
            $where .= ' AND t.mensaje LIKE ?';
            $valores[] = '%' . $campos->mensaje . '%';
        }
        if (isset($campos->descripcion) && $campos->descripcion) {
            $where .= ' AND t.descripcion LIKE ?';
            $valores[] = '%' . $campos->descripcion . '%';
        }
        if (isset($campos->log) && $campos->log) {
            $where .= ' AND t.log LIKE ?';
            $valores[] = '%' . $campos->log . '%';
        }
        if ($idestructura != 0) {
            $where .= ' AND t.idestructuracomun = ?';
            $valores[] = $idestructura;
        }
        if ($ip_host != 0) {
            $where .= ' AND t.ip_host = ?';
            $valores[] = $ip_host;
        }
        if ($rol != 0) {
            $where .= ' AND t.rol = ?';
            $valores[] = $rol;
        }
        if ($dominio != 0) {
            $where .= ' AND t.dominio = ?';
            $valores[] = $dominio;
        }
        if ($estructuracomun != 0) {
            $where .= ' AND t.estructuracomun = ?';
            $valores[] = $estructuracomun;
        }
        if ($fecha_desde != 0) {
            $where .= ' AND t.fecha >= ?';
            $valores[] = $fecha_desde;
        }
        if ($fecha_hasta != 0) {
            $where .= ' AND t.fecha <= ?';
            $valores[] = $fecha_hasta;
        }

        $query = Doctrine_Query::create();
        $result = $query->select('COUNT(t.idtraza) cantidad')
            ->from('HisExcepcion t')
            ->where($where, $valores)
            ->execute()->toArray(true);
        $query->free();
        return $result;
    }

    public function select($idestructura, $idtipotraza, $ip_host, $rol, $dominio, $estructuracomun, $fecha_desde, $fecha_hasta, $offset, $limit, $campos)
    {
        $count = 0;
        $where = 't.idtipotraza = ?';
        $valores[$count] = $idtipotraza;
        if (isset($campos->idusuario) && $campos->idusuario) {
            $count++;
            $where .= ' AND t.usuario LIKE ?';
            $valores[$count] = '%' . $campos->idusuario . '%';
        }
        if ($idestructura != 0) {
            $count++;
            $where .= ' AND t.idestructuracomun = ?';
            $valores[$count] = $idestructura;
        }
        if ($ip_host != 0) {
            $where .= ' AND t.ip_host = ?';
            $valores[] = $ip_host;
        }
        if ($rol != 0) {
            $where .= ' AND t.rol = ?';
            $valores[] = $rol;
        }
        if ($dominio != 0) {
            $where .= ' AND t.dominio = ?';
            $valores[] = $dominio;
        }
        if ($estructuracomun != 0) {
            $where .= ' AND t.estructuracomun = ?';
            $valores[] = $estructuracomun;
        }
        if ($fecha_desde != 0) {
            $count++;
            $where .= ' AND t.fecha >= ?';
            $valores[$count] = $fecha_desde;
        }
        if ($fecha_hasta != 0) {
            $count++;
            $where .= ' AND t.fecha <= ?';
            $valores[$count] = $fecha_hasta;
        }
        $query = Doctrine_Query::create();
        $result = $query->select('t.*')
            ->from('HisExcepcion t')
            ->where($where, $valores)
            ->offset($offset)
            ->limit($limit)
            ->orderBy('t.fecha DESC')
            ->execute()->toArray();
        $query->free();
        return $result;
    }

}
